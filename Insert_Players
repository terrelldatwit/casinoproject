
import sqlite3
import random

# Define realistic names
first_names = [
    "James", "Mary", "Robert", "Patricia", "John", "Jennifer", "Michael", "Linda",
    "William", "Elizabeth", "David", "Barbara", "Richard", "Susan", "Joseph", "Jessica",
    "Thomas", "Sarah", "Charles", "Karen", "Christopher", "Nancy", "Daniel", "Lisa",
    "Matthew", "Betty", "Anthony", "Margaret", "Mark", "Sandra", "Andrew", "Laura",
    "Donald", "Kimberly", "Paul", "Helen", "Steven", "Donna", "Edward", "Carol",
    "Brian", "Ruth", "Ronald", "Sharon", "George", "Michelle", "Kenneth", "Emily",
    "Kevin", "Deborah", "Jason", "Stephanie", "Jeffrey", "Rebecca", "Ryan", "Laura",
    "Jacob", "Shirley", "Gary", "Cynthia", "Nicholas", "Angela", "Eric", "Melissa",
    "Stephen", "Brenda", "Jonathan", "Amy", "Larry", "Anna", "Justin", "Virginia",
    "Scott", "Kathleen", "Brandon", "Pamela", "Frank", "Martha", "Benjamin", "Debra",
    "Gregory", "Amanda", "Samuel", "Carolyn", "Raymond", "Christine", "Patrick", "Marie",
    "Alexander", "Janet", "Jack", "Catherine", "Dennis", "Frances", "Jerry", "Ann",
    "Tyler", "Joyce", "Aaron", "Diane"
]

last_names = [
    "Smith", "Johnson", "Williams", "Brown", "Jones", "Garcia", "Miller", "Davis",
    "Rodriguez", "Martinez", "Hernandez", "Lopez", "Gonzalez", "Wilson", "Anderson",
    "Thomas", "Taylor", "Moore", "Jackson", "Martin", "Lee", "Perez", "Thompson",
    "White", "Harris", "Sanchez", "Clark", "Ramirez", "Lewis", "Robinson", "Walker",
    "Young", "Allen", "King", "Wright", "Scott", "Torres", "Nguyen", "Hill", "Flores",
    "Green", "Adams", "Nelson", "Baker", "Hall", "Rivera", "Campbell", "Mitchell",
    "Carter", "Roberts", "Gomez", "Phillips", "Evans", "Turner", "Diaz", "Parker",
    "Cruz", "Edwards", "Collins", "Reyes", "Stewart", "Morris", "Morales", "Murphy",
    "Cook", "Rogers", "Gutierrez", "Ortiz", "Morgan", "Cooper", "Peterson", "Bailey",
    "Reed", "Kelly", "Howard", "Ramos", "Kim", "Cox", "Ward", "Richardson", "Watson",
    "Brooks", "Chavez", "Wood", "James", "Bennett", "Gray", "Mendoza", "Ruiz", "Hughes"
]

random.shuffle(first_names)
random.shuffle(last_names)
unique_first_names = first_names[:100]

players_data = []
used_full_names = set()

for first in unique_first_names:
    last = random.choice(last_names)
    full_name = f"{first} {last}"
    while full_name in used_full_names:
        last = random.choice(last_names)
        full_name = f"{first} {last}"
    used_full_names.add(full_name)
    player_id = random.randint(1000, 9999)
    players_data.append((player_id, first, last))

unique_ids = set()
final_players = []
for pid, first, last in players_data:
    while pid in unique_ids:
        pid = random.randint(1000, 9999)
    unique_ids.add(pid)
    final_players.append((pid, first, last))

unique_passwords = set()
passwords = []
while len(passwords) < 100:
    pwd = random.randint(1000, 9999)
    if pwd not in unique_passwords:
        unique_passwords.add(pwd)
        passwords.append(pwd)

db_path = r"C:\Users\Anthony Magliozzi\OneDrive - Wentworth Institute of Technology\APC\Projects\_100_Players_Test\CasinoDB.db"
with sqlite3.connect(db_path) as conn:
    cursor = conn.cursor()

    cursor.execute("CREATE TABLE IF NOT EXISTS PLAYERS (ID INTEGER PRIMARY KEY, first_name TEXT, last_name TEXT, balance REAL, winnings REAL, Won INTEGER, Lost INTEGER, Bets INTEGER)")
    cursor.execute("CREATE TABLE IF NOT EXISTS Roulette (player_name TEXT, number_of_bets INTEGER, bet_amount REAL, wins INTEGER, losses INTEGER, money_won REAL)")
    cursor.execute("DROP TABLE IF EXISTS HighLow")
    cursor.execute("DROP TABLE IF EXISTS Login")
    cursor.execute("CREATE TABLE HighLow (player_name TEXT, number_of_bets INTEGER, bet_amount REAL, wins INTEGER, losses INTEGER, money_won REAL)")
    cursor.execute("CREATE TABLE Login (ID INTEGER PRIMARY KEY, Password INTEGER UNIQUE)")

    cursor.execute("DELETE FROM PLAYERS")
    cursor.execute("DELETE FROM Roulette")
    cursor.execute("DELETE FROM HighLow")
    cursor.execute("DELETE FROM Login")

    for i, (pid, first, last) in enumerate(final_players):
        full_name = f"{first} {last}"
        pwd = passwords[i]

        cursor.execute("INSERT INTO PLAYERS (ID, first_name, last_name, balance, winnings, Won, Lost, Bets) VALUES (?, ?, ?, 0, 0, 0, 0, 0)", (pid, first, last))
        cursor.execute("INSERT INTO Roulette (player_name, number_of_bets, bet_amount, wins, losses, money_won) VALUES (?, 0, 0, 0, 0, 0)", (full_name,))
        cursor.execute("INSERT INTO HighLow (player_name, number_of_bets, bet_amount, wins, losses, money_won) VALUES (?, 0, 0, 0, 0, 0)", (full_name,))
        cursor.execute("INSERT INTO Login (ID, Password) VALUES (?, ?)", (pid, pwd))

    conn.commit()
